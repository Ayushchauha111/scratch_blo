{"version":3,"sources":["Blockly/BlocklyComponent.jsx","Blockly/index.js","component/CatSprite.js","component/side.js","fields/BlocklyReactField.jsx","fields/DateField.jsx","blocks/customblocks.js","generator/generator.js","App.js","serviceWorker.js","index.js"],"names":["Blockly","setLocale","locale","BlocklyComponent","props","blocklyDiv","React","createRef","toolbox","this","initialXml","rest","children","primaryWorkspace","inject","current","Xml","domToWorkspace","textToDom","xml","Fragment","className","ref","id","xmlns","is","style","display","Component","Block","p","createElement","Value","Field","Shadow","Pos","stroke","fillRule","d","strokeWidth","fill","strokeLinecap","strokeLinejoin","CatSprite","Position","useState","toggle","settoggle","animatedbody","useSprings","length","map","transform","animatedStyle","index","g","type","onClick","width","height","viewBox","version","xmlSpace","itemsFromBackend","uuid","content","fun","name","items","BlocklyReactField","SERIALIZABLE","div_","getContentDiv","ReactDOM","render","border","sourceBlock_","getColourBorder","colourBorder","colourLight","setColour","getColour","showPositionedByField","dropdownDispose_","bind","unmountComponentAtNode","options","FieldRenderComponent","color","register","ReactDateField","onDateSelected_","date","setValue","Date","hideIfOwner","value_","toLocaleDateString","fieldElement","textContent","selected","onChange","inline","init","jsonInit","setStyle","appendDummyInput","appendField","CLOCKWISE","OFFSET","setNextStatement","setPreviousStatement","block","getField","getText","App","generateCode","code","BlocklyJS","workspaceToCode","simpleWorkspace","workspace","console","log","readOnly","trashcan","media","move","scrollbars","drag","wheel","Boolean","window","location","hostname","match","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f6c476a.chunk.js","sourcesContent":["import React from 'react';\nimport './BlocklyComponent.css';\n\nimport Blockly from 'blockly/core';\nimport locale from 'blockly/msg/en';\nimport 'blockly/blocks';\n\nBlockly.setLocale(locale);\n\nclass BlocklyComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.blocklyDiv = React.createRef();\n        this.toolbox = React.createRef();\n    }\n\n    componentDidMount() {\n        const { initialXml, children, ...rest } = this.props;\n        this.primaryWorkspace = Blockly.inject(\n            this.blocklyDiv.current,\n            {\n                toolbox: this.toolbox.current,\n                ...rest\n            },\n        );\n\n        if (initialXml) {\n            Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\n        }\n    }\n\n    get workspace() {\n        return this.primaryWorkspace;\n    }\n\n    setXml(xml) {\n        Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\n    }\n\n    render() {\n        const { children } = this.props;\n\n        return <React.Fragment>\n            <div className=\"h-screen overflow-hidden flex flex-row  \">\n            <div ref={this.blocklyDiv} id=\"blocklyDiv\" />\n            <xml xmlns=\"https://developers.google.com/blockly/xml\" is=\"blockly\" style={{ display: 'none' }} ref={this.toolbox}>\n                {children}\n            </xml>\n            </div>\n        </React.Fragment>;\n    }\n}\n\nexport default BlocklyComponent;\n","import React from 'react';\nimport BlocklyComponent from './BlocklyComponent';\n\nexport default BlocklyComponent;\n\nconst Block = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"block\", props, children);\n};\n\nconst Category = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"category\", props, children);\n};\n\nconst Value = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"value\", props, children);\n};\n\nconst Field = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"field\", props, children);\n};\n\nconst Shadow = (p) => {\n    const { children, ...props } = p;\n    props.is = \"blockly\";\n    return React.createElement(\"shadow\", props, children);\n};\n\n\nexport { Block, Category, Value, Field, Shadow}","import React,{useState} from \"react\"\nimport {animated,useSprings} from \"react-spring\"\n\nfunction Pos (props)\n{\n  \n  return <g{...props}>\n  <g>\n  <g id=\"Page-1\" stroke=\"none\" fillRule=\"nonzero\">\n    <g id=\"costume1\">\n      <g id=\"costume1.1\">\n        \n      <g id=\"tail\">\n  <path\n    d=\"M 21.9 73.8 C 19.5 73.3 16.6 72.5 14.2 70.3 C 8.7 65.4 7 57.3 3.2 59.4 C -0.7 61.5 -0.6 74.6 11.6 78.6 C 15.8 80 19.6 80 22.7 79.9 C 23.5 79.9 30.4 79.2 32.8 75.8 C 35.2 72.4 33.5 71.5 32.7 71.1 C 31.8 70.6 25.3 74.4 21.9 73.8 Z \"\n    stroke=\"#001026\"\n    strokeWidth=\"1.2\"\n    fill=\"#FFAB19\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  />\n  <path\n    d=\"M 3.8 59.6 C 1.8 60.2 0.8 64.4 1.8 67.9 C 2.8 71.4 4.4 73.2 5.7 74.5 C 5.5 73.8 5.1 71.6 6.8 70.3 C 8.9 68.6 12.6 69.5 12.6 69.5 C 12.6 69.5 9.5 65.7 7.9 63 C 6.3 60.7 5.8 59.2 3.8 59.6 Z \"\n    id=\"detail\"\n    fill=\"#FFFFFF\"\n    strokeWidth=\"1\"\n  />\n</g>\n        <path\n          d=\"M37.7,81.5 C35.9,82.7 29.7,87.1 21.8,89.6 L21.4,89.7 C21,89.8 20.8,90.3 21,90.7 C22.7,93.1 25.8,97.9 20.3,99.6 C15,101.3 5.1,87.2 9.3,83.5 C11.2,82.1 12.9,82.8 13.8,83.2 C14.3,83.4 14.8,83.4 15.3,83.3 C16.5,82.9 18.7,82.1 20.4,81.2 C24.7,79 25.7,78.1 27.7,76.6 C29.7,75.1 34.3,71.4 38,74.6 C41.2,77.3 39.4,80.3 37.7,81.5 Z\"\n          id=\"leg\"\n          stroke=\"#001026\"\n          strokeWidth=\"1.2\"\n          fill=\"#FFAB19\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M53.6,60.7 C54.1,61.1 60.2,68.3 62.2,66.5 C64.6,64.4 67.9,60.3 71.5,63.6 C75.1,66.9 68.3,72.5 65.4,74 C58.5,77.1 52.9,71.2 51.7,69.6 C50.5,68 48.4,65.3 48.4,62.7 C48.5,59.9 51.9,59.2 53.6,60.7 Z\"\n          id=\"arm\"\n          stroke=\"#001026\"\n          strokeWidth=\"1.2\"\n          fill=\"#FFAB19\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <g id=\"body-and-leg\">\n          <path\n            d=\"M 46.2 76.7 C 47.4 75.8 48.6 74.3 50.2 72 C 51.5 70.1 52.9 66.4 52.9 66.4 C 53.8 63.9 54.4 59.1 51.1 59.2 C 48.9 59.3 46.9 59 43.5 58.5 C 37.5 57.3 36.4 56.5 33.9 60.6 C 31.2 65.4 24.3 68.9 32.8 77.2 C 32.8 77.2 37.7 81 43.6 86.8 C 47.6 90.7 53.9 96.3 56.1 98.2 C 56.6 98.6 57.2 98.8 57.8 98.9 C 67.5 99.8 74.7 98.8 74.7 94.5 C 74.7 87.3 60.4 89.8 60.4 89.8 C 60.4 89.8 55.8 85.9 53.7 84 L 46.2 76.7 Z \"\n            id=\"body\"\n            stroke=\"#001026\"\n            strokeWidth=\"1.2\"\n            fill=\"#FFAB19\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n          <path\n            d=\"M 50.6 70 C 50.6 70 52.5 67.5 48.2 64.8 C 43.7 61.9 42 65.1 40.2 67.5 C 38.2 70.6 40.2 72.1 42.2 73.9 C 43.8 75.4 45.3 76.6 45.3 76.6 C 45.3 76.6 48.4 74.5 50.6 70 Z \"\n            id=\"tummy\"\n            fill=\"#FFFFFF\"\n            strokeWidth=\"1\"\n          />\n        </g>\n        <path\n          d=\"M30.2,68.4 C32.4,71.2 35.8,74.7 31.5,77.6 C25.6,80.9 20.7,70.9 19.7,67.4 C18.8,64.3 21.4,62.3 23.6,60.6 C27.9,57.5 31.5,54.7 35.5,56.2 C40.5,58 36.9,62 34.4,63.8 C32.9,64.9 31.4,66.1 30.3,66.8 C30,67.3 29.9,67.9 30.2,68.4 Z\"\n          id=\"arm\"\n          stroke=\"#001026\"\n          strokeWidth=\"1.2\"\n          fill=\"#FFAB19\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <g id=\"head\">\n          <path\n            d=\"M 53.1 9 C 50.8 8.6 48.4 8.4 45.6 8.6 C 40.9 8.8 36.4 10.5 36.4 10.5 L 24.3 2.6 C 23.9 2.4 23.4 2.7 23.5 3.1 L 25.6 21 C 26.2 20.2 15 33.8 22.1 45.2 C 29.2 56.6 44.3 61.7 63.1 58 C 81.9 54.3 86.3 43.5 85.1 37.8 C 83.9 32.1 76.8 30 76.8 30 C 76.8 30 76.7 25.5 73.5 20 C 71.6 16.7 65.2 12 65.2 12 L 62.6 1.3 C 62.5 0.9 62 0.8 61.7 1 L 53.1 9 Z \"\n            stroke=\"#001026\"\n            strokeWidth=\"1.2\"\n            fill=\"#FFAB19\"\n          />\n          <path\n            d=\"M 76.5 30.4 C 76.5 30.4 83.4 32.2 84.6 37.9 C 85.8 43.6 81 53.9 62.4 57.5 C 38.2 62.5 26.7 48.1 33.4 37.5 C 40.1 26.8 51.6 35.9 60 35.3 C 67.2 34.8 68 28.5 76.5 30.4 Z \"\n            id=\"face\"\n            fill=\"#FFFFFF\"\n            strokeWidth=\"1\"\n          />\n            <path\n            d=\"M 45 41.1 C 45 40.7 45.4 40.4 45.8 40.5 C 47.7 41.2 53.1 42.8 59.1 43.2 C 64.5 43.5 67.7 43.2 69.2 42.9 C 69.7 42.8 70.1 43.3 69.9 43.8 C 69 46.5 65.2 54 54.7 53.4 C 45.6 52.4 44.7 46 45 41.1 Z \"\n            id=\"mouth\"\n            stroke=\"#001026\"\n            strokeWidth=\"1.2\"\n            fill=\"#FFFFFF\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n          <path\n            d=\"M 83 35.4 C 83 35.4 90.2 35.3 94.9 31.5 \"\n            id=\"whisker\"\n            stroke=\"#001026\"\n            strokeWidth=\"1.2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M 83.4 41.3 C 83.4 41.3 87.3 43.2 93.6 42.7 \"\n            id=\"whisker\"\n            stroke=\"#001026\"\n            strokeWidth=\"1.2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M 59.6 32.7 C 61.7 32.7 63.9 32.9 64 33.6 C 64.1 35 62.6 37.8 61 37.9 C 59.2 38.1 55 35.6 55 34 C 54.9 32.8 57.6 32.7 59.6 32.7 Z \"\n            id=\"nose\"\n            stroke=\"#001026\"\n            strokeWidth=\"1.2\"\n            fill=\"#001026\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n          <path\n            d=\"M 14.6 31.2 C 14.6 31.2 23.2 34 26.7 37.1 \"\n            id=\"whisker\"\n            stroke=\"#001026\"\n            strokeWidth=\"1.2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M 15.3 41.2 C 15.3 41.2 22.7 42.3 27 40.6 \"\n            id=\"whisker\"\n            stroke=\"#001026\"\n            strokeWidth=\"1.2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <g id=\"eye\">\n            <path\n              d=\"M 71.4 21 C 74.3 25.5 74.4 30.6 71.6 32.4 C 68.8 34.2 64.2 32.1 61.2 27.6 C 58.3 23.1 58.2 18 61 16.2 C 63.8 14.3 68.5 16.5 71.4 21 Z \"\n              id=\"pupil\"\n              stroke=\"#001026\"\n              strokeWidth=\"1.2\"\n              fill=\"#FFFFFF\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M 71 26.7 C 71 27.8 70.2 28.7 69.2 28.7 C 68.2 28.7 67.4 27.8 67.4 26.7 C 67.4 25.6 68.2 24.7 69.2 24.7 C 70.2 24.7 71 25.6 71 26.7 \"\n              id=\"pupil\"\n              fill=\"#001026\"\n              strokeWidth=\"1\"\n            />\n          </g>\n          <g id=\"eye\">\n            <path\n              d=\"M 46.6 23.8 C 49.6 28.2 49.4 33.6 46.7 35.5 C 43.4 37.4 39 36 36 31.6 C 32.9 27.2 32.7 21.5 35.8 19.3 C 38.9 17 43.6 19.4 46.6 23.8 Z \"\n              stroke=\"#001026\"\n              strokeWidth=\"1.2\"\n              fill=\"#FFFFFF\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M 46 29.6 C 46 30.7 45.2 31.6 44.2 31.6 C 43.2 31.6 42.4 30.7 42.4 29.6 C 42.4 28.5 43.2 27.6 44.2 27.6 C 45.2 27.7 46 28.5 46 29.6 \"\n              id=\"pupil\"\n              fill=\"#001026\"\n              strokeWidth=\"1\"\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  </g>\n</g>\n      \n</g>\n};\n\n\nexport default function CatSprite(props) {\n \n  const [toggle,settoggle]=useState(false)\n  \n  // let v=[props.item[Object.keys(props.item)[1]]['items']]\n \n\n  let Position;\n  Position=[\n        <Pos key=\"body\"/>\n                ]\n  \n  \n                let x=0;\n                let y=0;\n                let z=0;\n                let i=0;\n  const springs=useSprings(Position.length,Position.map(()=>{\n    if(toggle){\n\n        \n  // v.map((item)=>{\n  //   console.log(item)\n  //    if(item.length!==0)\n  //    {\n  //      if(item[i]['fun']!=={})\n  //       {if(item[i]['fun']==='this.move(10)' )\n  //       {\n  //         x+=20;\n  //     i++;\n          \n  //       }\n  //       else if(item[i]['fun']==='this.clock(10)')\n  //       {\n  //         x-=10;\n  //         y-=15;\n          \n  //       i++;\n  //       }\n  //       else\n  //       {\n  //         x-=20\n          \n  //       i++;\n  //       }\n  //     }\n  //    }\n  //    console.log(i,x);\n\n  // })\n      // i++;\n      return  {     \n                   transform:\"translate3d(10px,20px,40px)\"\n              }\n            }\n              \n            }))\n\n  const animatedbody=springs.map((animatedStyle,index)=>{\n    return <animated.g key={index} style={animatedStyle}>{Position[index]}</animated.g>\n  })\n\n  return (\n    <>\n    <button type=\"button\" onClick={()=>{settoggle(!toggle)}}>TAP ON THIS</button>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"5000\"\n      height=\"2000\"\n      viewBox=\"0 0  5000 2000\"\n      version=\"1.1\"\n      xmlSpace=\"preserve\"\n    >\n     {animatedbody}\n    </svg>\n    </>\n  );\n}\n","import React ,{useState} from 'react'\nimport {DragDropContext,Draggable,Droppable} from 'react-beautiful-dnd'\nimport {uuid} from 'uuidv4'\nimport Sprint from './CatSprite'\nconst itemsFromBackend =[\n    {id:uuid(), content:'move 10 steps',fun:\"this.move(10)\" },\n    {id:uuid(), content:'turn clockwise 15 degree',fun:\"this.clock(10)\"},\n    {id:uuid(), content:'move back 10 steps',fun:\"this.!move(10)\" },\n    {id:uuid(), content:'turn anticlock 15 degree',fun:\"this.!clock(10)\"},\n\n]\n\nconst columnsFromBackend=\n    {\n        [uuid()]:{\n            name:'Sidebar',\n            items:itemsFromBackend   // we are returno array of array wrong []\n        },\n        [uuid()]:{\n            name:'MidArea',\n            items:[]  // we are returno array of array wrong []\n        }\n    };\n    \n    const onDragEnd=(Result,columns,setcolumns)=>{\n        \n    const {source,destination}=Result;\n  \n    \n    if( source.droppableId!==destination.droppableId )\n    {\n    const SourceCol=columns[source.droppableId]\n    const DestCol=columns[destination.droppableId]\n     const Sourceitem=[...SourceCol.items]\n     const Destitem=[...DestCol.items]\n     const [removed]=Sourceitem.splice(source.index,1);\n     Destitem.splice(destination.index,0,removed);\n     setcolumns({\n         ...columns,\n         [source.droppableId]:{\n            ...SourceCol,\n            items:Sourceitem\n        },\n         [destination.droppableId]:{\n             ...DestCol,\n             items:Destitem\n         }\n     })\n\n\n    }\n    else\n    {\n        const SourceCol=columns[source.droppableId]\n        const Sourceitem=[...SourceCol.items]\n        const [removed]=Sourceitem.splice(source.index,1);\n        Sourceitem.splice(destination.index,0,removed);\n        setcolumns({\n            ...columns,\n            [source.droppableId]:{\n               ...SourceCol,\n               items:Sourceitem\n           }\n            \n        })\n    }\n    \n    }\n\n\n    \nexport default function Side()\n{\n    //initial state\n\n    const[columns,setcolumns]=useState(columnsFromBackend)\n   \n    return(\n        <div className=\" flex flex-row\" >\n        \n        <div style={{display:'flex',justifyContent:'center',height:'100%'}}>\n            <DragDropContext onDragEnd={Result=>onDragEnd(Result,columns,setcolumns)}>\n              {Object.entries(columns).map(([id,column])=>{\n                  return (\n                      <div style={{display:'flex', flexDirection:'column' ,alignItems:'center'}}>\n                        <h2>{column.name}</h2>\n                        <div style={{}}>\n                      <Droppable droppableId={id} key={id}>\n                      {(provided,snapshot)=>{\n                          return (\n                              <div \n                              {...provided.droppableProps}\n                               ref={provided.innerRef}\n                              style={{ background: snapshot.isDraggingOver,\n                              padding:4,width:250,minHeight:500}}\n                              >\n            {column.items.map((item,index)=>{\n                return(\n                    <Draggable key={item.id} draggableId={item.id} index={index}>\n                        {(provided,snapshot)=>{\n                            return (\n                                <div\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                style={\n                                    {\n                                        userSelect:'none',\n                                        padding:2,\n                                        margin: '0 0 0 0',\n                                        backgroundColor: snapshot.isDragging,\n                                        ...provided.draggableProps.style\n\n                                    }\n                                }\n                                \n                                >\n                                    <div className=\"flex flex-row flex-wrap bg-blue-500 text-white px-2 py-1 my-2 text-sm cursor-pointer\">\n        {item.content}\n      </div>\n\n                                </div>\n                            )\n                        }}\n                    </Draggable>\n                )\n            })}\n             {provided.placeholder}\n                              </div>\n                          )\n                      }}\n\n                      </Droppable>\n                      </div>\n                        \n                      </div>\n                  )\n              })}\n            </DragDropContext>\n\n        </div>\n        <div className=\"flex-none h-full overflow-y-auto p-2\" >\n            \n        <Sprint item={columns}/>\n        </div>\n        </div>\n        \n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as Blockly from 'blockly/core';\n\n\nclass BlocklyReactField extends Blockly.Field {\n\n  SERIALIZABLE = true\n  \n  static fromJson(options) {\n    return new BlocklyReactField(options['text']);\n  }\n\n  showEditor_() {\n    this.div_ = Blockly.DropDownDiv.getContentDiv();\n    ReactDOM.render(this.render(),\n      this.div_);\n\n    var border = this.sourceBlock_.getColourBorder();\n    border = border.colourBorder || border.colourLight;\n    Blockly.DropDownDiv.setColour(this.sourceBlock_.getColour(), border);\n\n    Blockly.DropDownDiv.showPositionedByField(\n      this, this.dropdownDispose_.bind(this));\n  }\n\n  dropdownDispose_() {\n    ReactDOM.unmountComponentAtNode(this.div_);\n  }\n\n  render() {\n    return <FieldRenderComponent />\n  }\n}\n\nclass FieldRenderComponent extends React.Component {\n\n  render() {\n    return <div style={{ color: '#fff' }}>\n      Hello from React!\n        </div>;\n  }\n}\n\nBlockly.fieldRegistry.register('field_react_component', BlocklyReactField);\n\nexport default BlocklyReactField;\n","import React from 'react';\nimport * as Blockly from 'blockly/core';\n\nimport BlocklyReactField from './BlocklyReactField';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nclass ReactDateField extends BlocklyReactField {\n\n  static fromJson(options) {\n    return new ReactDateField(new Date(options['date']));\n  }\n  \n  onDateSelected_ = (date) => {\n    this.setValue(new Date(date));\n    Blockly.DropDownDiv.hideIfOwner(this, true);\n  }\n\n  getText_() {\n    return this.value_.toLocaleDateString();\n  };\n\n  fromXml(fieldElement) {\n    this.setValue(new Date(fieldElement.textContent));\n  }\n\n  render() {\n    return <DatePicker\n        selected={this.value_}\n        onChange={this.onDateSelected_}\n        inline />\n  }\n}\n\nBlockly.fieldRegistry.register('field_react_date', ReactDateField);\n\nexport default ReactDateField;\n","\nimport * as Blockly from 'blockly/core';\n\nimport '../fields/BlocklyReactField';\nimport '../fields/DateField';\n\n\nBlockly.Blocks['test_react_field'] = {\n  init: function() {\n    this.jsonInit({\n      \"type\": \"test_react_field\",\n      \"message0\": \"move %1 steps\",\n      \"args0\": [\n        {\n          \"type\": \"field_react_component\",\n          \"name\": \"FIELD\",\n          \"text\": \" \"\n        },\n      ],\n      \"previousStatement\": null,\n      \"nextStatement\": null,\n    });\n    this.setStyle('loop_blocks');\n  }\n};\n\nBlockly.Blocks['test_react_date_field'] = {\n  init: function() {\n    this.jsonInit({\n      \"type\": \"test_react_date_field\",\n      \"message0\": \"date field %1\",\n      \"args0\": [\n        {\n          \"type\": \"field_react_date\",\n          \"name\": \"DATE\",\n          \"date\": \"01/01/2020\"\n        },\n      ],\n      \"previousStatement\": null,\n      \"nextStatement\": null,\n    });\n    this.setStyle('loop_blocks');\n  }\n};\n\nBlockly.Blocks['example_angle'] = {\n  \n  init: function() {\n    \n    this.appendDummyInput()\n        .appendField('Turn clockwise')\n        .appendField(new Blockly.FieldAngle(90), 'FIELDNAME')\n        Blockly.FieldAngle.CLOCKWISE = true;\n        Blockly.FieldAngle.OFFSET = 0;\n        this.setStyle('loop_blocks')\n        this.setNextStatement(true, 'Action');\n        this.setPreviousStatement(true, 'Action');\n  },\n};\n//write\nBlockly.Blocks['example_angle_2'] = {\n  \n  init: function() {\n    this.appendDummyInput()\n        .appendField('Turn Anticlockwise')\n        .appendField(new Blockly.FieldAngle(90), 'FIELDNAME')\n        Blockly.FieldAngle.CLOCKWISE = false;\n        this.setStyle('loop_blocks')\n        this.setNextStatement(true, 'Action');\n        this.setPreviousStatement(true, 'Action');\n  },\n};\n\nBlockly.Blocks['example_checkbox'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldCheckbox(true), 'FIELDNAME')\n        .appendField('x position');\n        this.setStyle('loop_blocks')\n        this.setNextStatement(true, 'Action');\n        this.setPreviousStatement(true, 'Action');\n  }\n};\nBlockly.Blocks['example_checkbox_2'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldCheckbox(true), 'FIELDNAME')\n        .appendField('y position');\n        this.setStyle('loop_blocks')\n        this.setNextStatement(true, 'Action');\n        this.setPreviousStatement(true, 'Action');\n  }\n};\nBlockly.Blocks['example_checkbox_3'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(new Blockly.FieldCheckbox(true), 'FIELDNAME')\n        .appendField('Direction');\n        this.setStyle('loop_blocks')\n        this.setNextStatement(true, 'Action');\n        this.setPreviousStatement(true, 'Action');\n  }\n};\n\n\nBlockly.Blocks['example_dropdown'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField('drop down:')\n        .appendField(new Blockly.FieldDropdown([\n            ['first item', 'ITEM1'],\n            ['second item', 'ITEM2']\n        ]), 'FIELDNAME');\n  }\n};\nBlockly.Blocks['example_image'] = {\n  init: function() {\n    this.appendDummyInput()\n      .appendField(\"image:\")\n      .appendField(new Blockly.FieldImage(\n        \"https://www.gstatic.com/codesite/ph/images/star_on.gif\",\n        15,\n        15,\n        \"*\"));\n  }\n};\nBlockly.Blocks['example_number'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"number:\")\n        .appendField(new Blockly.FieldNumber(100, 0, 100, 10), 'FIELDNAME');\n  }\n};\nBlockly.Blocks['example_textinput'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField(\"text input:\")\n        .appendField(new Blockly.FieldTextInput('default text'),\n            'FIELDNAME');\n  }\n};\n\nBlockly.Blocks['example_variable_untyped'] = {\n  init: function() {\n    this.appendDummyInput()\n        .appendField('Move')\n        .appendField(new Blockly.FieldVariable('x'), 'FIELDNAME')\n        .appendField('Steps');\n        this.setStyle('loop_blocks')\n        this.setNextStatement(true, 'Action');\n        this.setPreviousStatement(true, 'Action');\n  }\n  \n};","\nimport * as Blockly from 'blockly/core';\nimport 'blockly/javascript';\n\nBlockly.JavaScript['test_react_field'] = function (block) {\n    return 'console.log(\\'custom block\\');\\n';\n};\n\nBlockly.JavaScript['test_react_date_field'] = function (block) {\n    return 'console.log(' + block.getField('DATE').getText() + ');\\n';\n};\n\nBlockly.JavaScript['field'] = function (block) {\n    return 'console.log(\\'ayush\\');\\n';\n};","// import library from 'google-closure-library'\nimport React from 'react';\nimport './App.css';\nimport BlocklyComponent, { Block, Value, Field, Shadow } from './Blockly';\nimport BlocklyJS from 'blockly/javascript';\nimport Old from './component/side'\nimport Sprite from './component/CatSprite'\nimport './blocks/customblocks';\nimport './generator/generator';\nimport PreviewArea from './com/PreviewArea'\nimport CatSprite from './component/CatSprite';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.simpleWorkspace = React.createRef();\n  }\n\n  generateCode = () => {\n    var code = BlocklyJS.workspaceToCode(\n      this.simpleWorkspace.current.workspace\n    );\n    console.log(code);\n  }\n\n  render() {\n    console.log(this.generateCode)\n    return (\n      // <div >\n      //   <div>\n      //     <Sprite />\n      //     </div>\n      //     <div>\n      //    \n      //     </div>\n      // </div>\n      <div className=\"bg-blue-100 pt-6 font-sans\">\n      <div className=\"h-screen overflow-hidden flex flex-row  \">\n        <div className=\"flex-1 h-screen overflow-hidden flex flex-row bg-white border-t border-r border-gray-200 rounded-tr-xl mr-2\">\n        <BlocklyComponent onClick={this.generateCode} ref={this.simpleWorkspace}\n          readOnly={false} trashcan={true} media={'media/'}\n          move={{\n            scrollbars: true,\n            drag: true,\n            wheel: true\n          }}\n          >\n            <Block type='example_variable_untyped' />\n            <Block type=\"example_angle\" />\n            <Block type=\"example_angle_2\" />\n            <Block type=\"example_checkbox\" />\n            <Block type=\"example_checkbox_2\" />\n            <Block type=\"example_checkbox_3\" />\n            {/* <Block type=\"test_react_date_field\" /> */}\n            {/* <Block type=\"controls_ifelse\" /> */}\n            {/* <Block type=\"logic_compare\" />\n            <Block type=\"logic_operation\" />\n            <Block type=\"logic_negate\" />\n            <Block type=\"logic_boolean\" />\n            <Block type=\"logic_null\" />\n            <Block type=\"logic_ternary\" />\n            <Block type=\"text_charAt\"> */}\n              {/* <Value name=\"VALUE\">\n                <Block type=\"variables_get\">\n                  <Field name=\"VAR\">text</Field>\n                </Block>\n              </Value>\n            </Block> */}\n            <Block type=\"controls_repeat_ext\">\n              <Value name=\"TIMES\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">10</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            <Block type=\"controls_repeat_ext\">\n            </Block>\n          </BlocklyComponent>\n        </div>\n          <div >\n          <CatSprite />\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}